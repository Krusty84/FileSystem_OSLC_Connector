/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/10.0.7
 * Generated at: 2022-12-18 20:01:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.com.krusty84.fileconnector;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.List;
import java.net.URI;
import java.net.URLEncoder;
import org.eclipse.lyo.oslc4j.core.model.Service;
import org.eclipse.lyo.oslc4j.core.model.ServiceProvider;
import org.eclipse.lyo.oslc4j.core.model.Dialog;
import org.eclipse.lyo.oslc4j.core.model.CreationFactory;
import org.eclipse.lyo.oslc4j.core.model.ResourceShape;
import org.eclipse.lyo.oslc4j.core.model.QueryCapability;
import javax.ws.rs.core.UriBuilder;
import org.eclipse.lyo.oslc4j.core.OSLC4JUtils;

public final class serviceprovider_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    String listResourceTypes(URI[] resourceTypes) {
        List<String> rs = new ArrayList<String>();
        for(URI resourceType : resourceTypes) {
            String[] split = resourceType.toString().split("[#/]+");
            String shortName = (split.length > 1) ? split[split.length -1] : resourceType.toString();
            rs.add("<a href=\"" + resourceType + "\">" + shortName + "</a>");
        }
        return String.join(", ", rs);
    }         
    
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/doykin/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153370682000L));
    _jspx_dependants.put("file:/C:/Users/doykin/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1667417616027L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("org.eclipse.lyo.oslc4j.core.model.Service");
    _jspx_imports_classes.add("org.eclipse.lyo.oslc4j.core.model.Dialog");
    _jspx_imports_classes.add("org.eclipse.lyo.oslc4j.core.model.ServiceProvider");
    _jspx_imports_classes.add("org.eclipse.lyo.oslc4j.core.model.ResourceShape");
    _jspx_imports_classes.add("javax.ws.rs.core.UriBuilder");
    _jspx_imports_classes.add("java.net.URI");
    _jspx_imports_classes.add("org.eclipse.lyo.oslc4j.core.model.CreationFactory");
    _jspx_imports_classes.add("org.eclipse.lyo.oslc4j.core.OSLC4JUtils");
    _jspx_imports_classes.add("org.eclipse.lyo.oslc4j.core.model.QueryCapability");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

ServiceProvider serviceProvider = (ServiceProvider)request.getAttribute("serviceProvider");
Service[] services = (Service[])request.getAttribute("services");
String catalogUrl = UriBuilder.fromUri(OSLC4JUtils.getServletURI()).path("/catalog/singleton").build().toString();

      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <title>");
      out.print( serviceProvider.getTitle() );
      out.write("</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\" integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\" crossorigin=\"anonymous\">\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js\" integrity=\"sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js\" integrity=\"sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <nav class=\"navbar navbar-expand-lg sticky-top navbar-light bg-light\">\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <a class=\"navbar-brand\" href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write('"');
      out.write('>');
      out.print( application.getServletContextName() );
      out.write("</a>\n");
      out.write("      <ul class=\"navbar-nav mr-auto\">\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"");
      //  c:url
      org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
      boolean _jspx_th_c_005furl_005f2_reused = false;
      try {
        _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
        _jspx_th_c_005furl_005f2.setParent(null);
        // /com/krusty84/fileconnector/serviceprovider.jsp(56,55) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005furl_005f2.setValue( catalogUrl );
        int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
        if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
        _jspx_th_c_005furl_005f2_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
      }
      out.write("\">Service Provider Catalog</a></li>\n");
      out.write("        <li class=\"nav-item\"><a class=\"nav-link\" href=\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\">Swagger UI</a></li>\n");
      out.write("      </ul>\n");
      out.write("    </div>\n");
      out.write("  </nav>\n");
      out.write("\n");
      out.write("  <div class=\"container\">\n");
      out.write("    <div class=\"page-header\">\n");
      out.write("      <h1>");
      out.print( serviceProvider.getTitle() );
      out.write("</h1>\n");
      out.write("      <p>");
      out.print( serviceProvider.getDescription() );
      out.write("</p>\n");
      out.write("\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
      out.write("\n");
      out.write("    ");
 if (services.length == 0) {
      out.write("\n");
      out.write("        <div class=\"alert alert-primary\" role=\"alert\">\n");
      out.write("            <h4 class=\"alert-heading\">No OSLC Services Defined for this Service Provider!</h4>\n");
      out.write("            <hr>\n");
      out.write("            <p>\n");
      out.write("                Define some OSLC services for your Service Provider in your model. \n");
      out.write("                Then re-generate to obtain access to these services.\n");
      out.write("            </p>\n");
      out.write("        </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    ");
for (int serviceIndex = 0; serviceIndex < services.length; serviceIndex++) {
      out.write("\n");
      out.write("    ");
 
    URI domain = services[serviceIndex].getDomain();
    Dialog[] selectionDialogs = services[serviceIndex].getSelectionDialogs();
    Dialog[] creationDialogs = services[serviceIndex].getCreationDialogs();
    CreationFactory[] creationFactories = services[serviceIndex].getCreationFactories();
    QueryCapability[] queryCapabilities= services[serviceIndex].getQueryCapabilities();
    
      out.write("\n");
      out.write("    <h2>OSLC Service for Domain: <a href=\"");
      out.print(domain);
      out.write('"');
      out.write('>');
      out.print(domain);
      out.write("</a></h2>\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h3>Sample Clients</h3>\n");
      out.write("    <p>Use the code behind these sample pages (html, javascript) to build your own interactions with OSLC Delegated UIs.</p>\n");
      out.write("    ");

        for (int selectionDialogIndex = 0; selectionDialogIndex < selectionDialogs.length; selectionDialogIndex++) {
            String selectionDialog = selectionDialogs[selectionDialogIndex].getDialog().toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print(request.getContextPath());
      out.write("/com/krusty84/fileconnector/selectiondialogsampleclient.jsp?selectionUri=");
      out.print( URLEncoder.encode(selectionDialog.toString(), "UTF-8") );
      out.write("\">Sample Selector Dialog Client</a> For {");
      out.print( listResourceTypes(selectionDialogs[selectionDialogIndex].getResourceTypes()) );
      out.write("}</p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    ");

        for (int creationDialogIndex = 0; creationDialogIndex < creationDialogs.length; creationDialogIndex++) {
            String creationDialog = creationDialogs[creationDialogIndex].getDialog().toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print(request.getContextPath());
      out.write("/com/krusty84/fileconnector/creationdialogsampleclient.jsp?creationUri=");
      out.print( URLEncoder.encode(creationDialog.toString(), "UTF-8") );
      out.write("\">Sample Creation Dialog Client</a> For {");
      out.print( listResourceTypes(creationDialogs[creationDialogIndex].getResourceTypes()) );
      out.write("}</p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h3>OSLC Capabilities</h3>\n");
      out.write("    ");
 if(selectionDialogs.length > 0) {
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h4>Resource Selector Dialogs</h4>\n");
      out.write("    ");

        for (int selectionDialogIndex = 0; selectionDialogIndex < selectionDialogs.length; selectionDialogIndex++) {
            String selectionDialog = selectionDialogs[selectionDialogIndex].getDialog().toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print( selectionDialog );
      out.write("\">Selection Dialog</a> For {");
      out.print( listResourceTypes(selectionDialogs[selectionDialogIndex].getResourceTypes()) );
      out.write("}</p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    ");
 if(creationDialogs.length > 0) {
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h4>Resource Creator Dialogs</h4>\n");
      out.write("    ");

        for (int creationDialogIndex = 0; creationDialogIndex < creationDialogs.length; creationDialogIndex++) {
            String creationDialog = creationDialogs[creationDialogIndex].getDialog().toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print( creationDialog );
      out.write("\">Creation Dialog</a> For {");
      out.print( listResourceTypes(creationDialogs[creationDialogIndex].getResourceTypes()) );
      out.write("}</p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    ");
 if(creationFactories.length > 0) {
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h4>Resource Creation Factories</h4>\n");
      out.write("    ");

        for (int creationFactoryIndex = 0; creationFactoryIndex < creationFactories.length; creationFactoryIndex++) {
            String creationFactory = creationFactories[creationFactoryIndex].getCreation().toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print( creationFactory );
      out.write("\">Creation Factory</a> For {");
      out.print( listResourceTypes(creationFactories[creationFactoryIndex].getResourceTypes()) );
      out.write("}</p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    ");
 if(queryCapabilities.length > 0) {
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h4>Resource Query Capabilities</h4>\n");
      out.write("    ");

        for (int queryCapabilityIndex = 0; queryCapabilityIndex < queryCapabilities.length; queryCapabilityIndex++) {
            QueryCapability qc = queryCapabilities[queryCapabilityIndex];
            String queryCapability = qc.getQueryBase().toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print( queryCapability );
      out.write("\">Query Capability</a> For {");
      out.print( listResourceTypes(queryCapabilities[queryCapabilityIndex].getResourceTypes()) );
      out.write("}</p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    ");
 if(creationFactories.length > 0) {
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h4>Creation Resource Shapes</h4>\n");
      out.write("    ");

        for (int creationFactoryIndex = 0; creationFactoryIndex < creationFactories.length; creationFactoryIndex++) {
            URI[] creationShapes = creationFactories[creationFactoryIndex].getResourceShapes();
            String creationShape = creationShapes[0].toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print( creationShape );
      out.write('"');
      out.write('>');
      out.print( creationShape );
      out.write("</a></p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    ");
 if(queryCapabilities.length > 0) {
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("    <h4>Query Resource Shapes</h4>\n");
      out.write("    ");

        for (int queryCapabilityIndex = 0; queryCapabilityIndex < queryCapabilities.length; queryCapabilityIndex++) {
            String queryShape = queryCapabilities[queryCapabilityIndex].getResourceShape().toString();
    
      out.write("\n");
      out.write("    <p><a href=\"");
      out.print( queryShape );
      out.write('"');
      out.write('>');
      out.print( queryShape );
      out.write("</a></p>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("\n");
      out.write("    ");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /com/krusty84/fileconnector/serviceprovider.jsp(187,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(serviceIndex + 1 < services.length);
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("      <hr>\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\n");
      out.write("    </div>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("  </div>\n");
      out.write("  <footer class=\"footer\">\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <p class=\"text-muted\">\n");
      out.write("        OSLC Adaptor was generated using <a href=\"http://eclipse.org/lyo\">Eclipse Lyo</a>.\n");
      out.write("      </p>\n");
      out.write("    </div>\n");
      out.write("  </footer>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /com/krusty84/fileconnector/serviceprovider.jsp(49,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/static/css/adaptor.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /com/krusty84/fileconnector/serviceprovider.jsp(54,36) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent(null);
      // /com/krusty84/fileconnector/serviceprovider.jsp(57,55) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("/swagger-ui/index.jsp");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }
}
